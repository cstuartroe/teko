/* EXPECT ERROR

Name Error (tests/ast.to:28:9)
  left: Expression,
        ^
No type called Expression    */

// I need to figure out a hoisting solution for this to work

type TokenType = "symbol" | "number" | "binop"

type Token = {
  line: int,
  col: int,
  value: str,
  ttype: TokenType,
}

type SimpleExpression = {
  etype: "simple",
  t: Token,
}

type BinOp = "+" | "-" | "*" | "/" | "^" | "%" | "&&" | "||"

type BinOpExpression = {
  etype: "binop",
  left: Expression,
  binop: BinOp,
  right: Expression,
}

type Expression =
  SimpleExpression
  | BinOpExpression

expr : Expression = {
  etype: "binop",
  left: {
    etype: "simple",
    t: {
      line: 1,
      col: 1,
      value: "foo",
      ttype: "symbol",
    }
  },
  binop: "+",
  right: {
    etype: "simple",
    t: {
      line: 1,
      col: 5,
      value: "bar",
      ttype: "symbol",
    }
  }
}
