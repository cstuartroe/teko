n : int = 3
n2 : int = n
n <- 4
print(n2$)
print("\n")

b : bool = true

s : str = "hello\n"

s2 : str = s

print(s2)

num : int = 1 + 2 * 3 / 4 - 5 ^ 6 * 7

print(num$)

m : int = if (b) then 0 else 1

type OType = {
  foo: {
    foo: str,
    bar: bool,
  },
  n: int
}

o : OType = {
  foo: {
    foo: "foo",
    bar: true,
  },
  n: 3,
  m: 0,
}

o <- {
  foo: {
    foo: "foo",
    bar: true,
  },
  n: 3,
  other_field: 0,
}

print(o.foo.foo)
print("\n")

arr := [1,2,3,4,5] + [6,7,8,9,10]
print(arr.at(0)$)
print("\n")
print(arr.size$)
print("\n")
print(if arr.includes(1) then "yeppers" else "nopers")
print("\n")

print(arr$)
print("\n")

fn foo(numberoony: int): int -> do {
  x := numberoony + 3
  x * n
}

print(foo(5)$)
print("\n")
